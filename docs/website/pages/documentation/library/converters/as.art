name: "as"
type: :function
description: "format given value as implied type"
module: "Converters"
line: 690
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Converters.nim#L690"
returns: [
                :any
        ]
examples: [
                {
                        print as.binary 123           ; 1111011
                        print as.octal 123            ; 173
                        print as.hex 123              ; 7b
                }
                 {
                        print as.ascii "thís ìß ñot à tést"
                        ; this iss not a test
                }
        ]
attributes: #[
        binary: #[
                types: [
                                :logical
                        ]
                description: "format integer as binary"
                ]
        hex: #[
                types: [
                                :logical
                        ]
                description: "format integer as hexadecimal"
                ]
        octal: #[
                types: [
                                :logical
                        ]
                description: "format integer as octal"
                ]
        ascii: #[
                types: [
                                :logical
                        ]
                description: "transliterate string to ASCII"
                ]
        agnostic: #[
                types: [
                                :logical
                        ]
                description: "convert words in block to literals, if not in context"
                ]
        data: #[
                types: [
                                :logical
                        ]
                description: "parse input as Arturo data block"
                ]
        code: #[
                types: [
                                :logical
                        ]
                description: "convert value to valid Arturo code"
                ]
        pretty: #[
                types: [
                                :logical
                        ]
                description: "prettify generated code"
                ]
        unwrapped: #[
                types: [
                                :logical
                        ]
                description: "omit external block notation"
                ]
        ]
arguments: #[
        value: [
                        :any
                ]
        ]
related: [
                "Converters/range"
                 "Converters/store"
                 "Converters/array"
                 "Crypto/hash"
        ]