name: "collect"
type: :function
description: "collect items from given collection condition while is true"
module: "Iterators"
line: 594
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Iterators.nim#L594"
returns: [
                :block
                 :nothing
        ]
examples: [
                {
                        collect [1 3 5 4 6 7] => odd?
                        ; => [1 3 5]
                        
                        collect [1 2 3 4 3 2 1 2 3] 'x -> x < 4
                        ; => [1 2 3]
                }
                 {
                        collect.after [4 6 3 5 2 0 1] => odd?
                        ; => [3 5 2 0 1]
                        
                        collect.after 1..10 'x -> x > 4
                        ; => [5 6 7 8 9 10]
                }
        ]
attributes: #[
        with: #[
                types: [
                                :literal
                        ]
                description: "use given index"
                ]
        after: #[
                types: [
                                :logical
                        ]
                description: "start collecting after given condition becomes true"
                ]
        ]
arguments: #[
        collection: [
                        :integer
                         :string
                         :literal
                         :dictionary
                         :object
                         :inline
                         :block
                         :range
                ]
        params: [
                        :null
                         :literal
                         :block
                ]
        condition: [
                        :block
                         :bytecode
                ]
        ]
related: [
                "Iterators/select"
                 "Iterators/enumerate"
                 "Iterators/filter"
                 "Iterators/fold"
        ]