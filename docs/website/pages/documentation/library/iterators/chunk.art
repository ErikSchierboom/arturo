name: "chunk"
type: :function
description: "chunk together consecutive items in collection that abide by given predicate"
module: "Iterators"
line: 481
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Iterators.nim#L481"
returns: [
                :block
                 :nothing
        ]
examples: [
                {
                        chunk [1 1 2 2 3 22 3 5 5 7 9 2 5] => even?
                        ; => [[1 1] [2 2] [3] [22] [3 5 5 7 9] [2] [5]]
                }
                 {
                        chunk.value [1 1 2 2 3 22 3 5 5 7 9 2 5] 'x [ odd? x ]
                        ; => [[true [1 1]] [false [2 2]] [true [3]] [false [22]] [true [3 5 5 7 9]] [false [2]] [true [5]]]
                }
                 {
                        chunk.with:'i ["one" "two" "three" "four" "five" "six"] [] -> i < 4
                        ; => [["one" "two" "three" "four"] ["five" "six"]]
                }
                 {
                        chunk [1 7 5 4 3 6 8 2] [x y]-> even? x+y
                        ; => [[1 7] [5 4 3 6] [8 2]]
                }
        ]
attributes: #[
        with: #[
                types: [
                                :literal
                        ]
                description: "use given index"
                ]
        value: #[
                types: [
                                :logical
                        ]
                description: "also include condition values"
                ]
        ]
arguments: #[
        collection: [
                        :integer
                         :string
                         :literal
                         :dictionary
                         :object
                         :inline
                         :block
                         :range
                ]
        params: [
                        :null
                         :literal
                         :block
                ]
        condition: [
                        :block
                         :bytecode
                ]
        ]
related: [
                "Iterators/cluster"
                 "Iterators/minimum"
                 "Iterators/gather"
                 "Iterators/enumerate"
        ]