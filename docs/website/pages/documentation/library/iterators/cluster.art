name: "cluster"
type: :function
description: "group together items in collection that abide by given predicate"
module: "Iterators"
line: 535
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Iterators.nim#L535"
returns: [
                :block
                 :nothing
        ]
examples: [
                {
                        cluster 1..10 => odd?
                        ; => [[1 3 5 7 9] [2 4 6 8 10]]
                        
                        cluster 1..10 'x -> prime? x
                        ; => [[1 4 6 8 9 10] [2 3 5 7]]
                }
                 {
                        cluster 1..10 [x y] -> 10 < x+y
                        ; => [[1 2 3 4] [5 6 7 8 9 10]]
                }
                 {
                        cluster.value 1..10 'x -> prime? x
                        ; => [[false [1 4 6 8 9 10]] [true [2 3 5 7]]]
                }
                 {
                        #.raw flatten.once cluster.value 1..10 'x [
                            (prime? x)? -> "prime"
                                        -> "composite"
                        ]
                        ; => [composite:[1 4 6 8 9 10] prime:[2 3 5 7]]
                }
                 {
                        cluster.with: 'i ["one" "two" "three" "four" "five" "six"] [] -> even? i
                        ; => [["one" "three" "five"] ["two" "four" "six"]]
                }
        ]
attributes: #[
        with: #[
                types: [
                                :literal
                        ]
                description: "use given index"
                ]
        value: #[
                types: [
                                :logical
                        ]
                description: "also include condition values"
                ]
        ]
arguments: #[
        collection: [
                        :integer
                         :string
                         :literal
                         :dictionary
                         :object
                         :inline
                         :block
                         :range
                ]
        params: [
                        :null
                         :literal
                         :block
                ]
        condition: [
                        :block
                         :bytecode
                ]
        ]
related: [
                "Iterators/chunk"
                 "Iterators/filter"
                 "Iterators/gather"
                 "Iterators/enumerate"
        ]