name: "match"
type: :function
description: "get matches within string, using given regular expression"
module: "Strings"
line: 442
source: "https://github.com/arturo-lang/arturo/blob/v0.9.83/src/library/Strings.nim#L442"
returns: [
                :integer
                 :dictionary
                 :block
        ]
examples: [
                {
                        match "hello" "hello"                   ; => ["hello"]
                        match "x: 123, y: 456" {/[0-9]+/}       ; => ["123" "456"]
                        match "this is a string" {/[0-9]+/}     ; => []
                }
                 {
                        match.once "x: 123, y: 456" {/[0-9]+/}      ; => ["123"]
                }
                 {
                        match.count "some words" {/\w+/}        ; => 2
                }
                 {
                        match.capture "abc" {/(.)/}             ; => ["a" "b" "c"]
                        
                        match.capture "x: 123, y: 456 - z: 789, w: 012" 
                                      {/\w: (\d+), \w: (\d+)/}
                        ; => [["123" "456"] ["789" "012"]]
                }
                 {
                        inspect match.capture.named "x: 123, y: 456 - z: 789, w: 012" 
                                                    {/\w: (?<numA>\d+), \w: (?<numB>\d+)/}
                        ;[ :block
                        ;    [ :dictionary
                        ;        numA  :        123 :string
                        ;        numB  :        456 :string
                        ;    ]
                        ;    [ :dictionary
                        ;        numA  :        789 :string
                        ;        numB  :        012 :string
                        ;    ]
                        ;]
                }
                 {
                        match.bounds "hELlo wORLd" {/[A-Z]+/} 
                        ; => [1..2 7..9]
                }
                 {
                        match.in:0..2 "hello" {/l/}             ; => ["l"]
                }
        ]
attributes: #[
        once: #[
                types: [
                                :logical
                        ]
                description: "get just the first match"
                ]
        count: #[
                types: [
                                :logical
                        ]
                description: "just get number of matches"
                ]
        capture: #[
                types: [
                                :logical
                        ]
                description: "get capture groups only"
                ]
        named: #[
                types: [
                                :logical
                        ]
                description: "get named capture groups as a dictionary"
                ]
        bounds: #[
                types: [
                                :logical
                        ]
                description: "get match bounds only"
                ]
        in: #[
                types: [
                                :range
                        ]
                description: "get matches within given range"
                ]
        full: #[
                types: [
                                :logical
                        ]
                description: "get results as an array of match results"
                ]
        ]
arguments: #[
        string: [
                        :string
                ]
        regex: [
                        :char
                         :string
                         :regex
                ]
        ]
related: [
                "Strings/match?"
                 "Strings/jaro"
                 "Strings/truncate"
                 "Strings/strip"
        ]